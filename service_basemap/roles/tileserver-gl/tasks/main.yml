# Created by jacob.mendt@pikobytes.de on 13.10.21
#
# This file is subject to the terms and conditions defined in file
# "LICENSE", which is part of this source code package
#
# Installation and configuration of the tileserver-gl
#  * Install of tileserver-gl
#  * Downloads a mbtile and sets basic styling / config for the tileserver
---
  - name: Upgrade all packages to latest version (dist-upgrade)
    apt:
      upgrade: dist
      update_cache: yes
    become: yes

  - name: Install dependencies
    apt:
      name: [docker.io, apparmor, python3-docker, build-essential, libcairo2-dev, libprotobuf-dev]
    become: yes

  - name: Make sure user {{ ansible_user }} is within docker group
    user:
      name: "{{ ansible_user }}"
      groups: sudo,docker
      append: yes
    become: yes

  - name: Restart docker service
    shell: systemctl restart docker.service
    become: yes

  - name: Restart containernd
    shell: systemctl restart containerd.service
    become: yes

  - name: Creates {{ tileserver_gl.root_dir }}
    file:
      path: "{{ tileserver_gl.root_dir }}"
      state: directory
      owner: "{{ ansible_user }}"
      group: "{{ ansible_user }}"
    become: yes

  - name: Download {{ tileserver_gl.mbtile_download_link.url }}
    get_url:
      url: "{{ tileserver_gl.mbtile_download_link.url }}"
      url_username: "{{ tileserver_gl.mbtile_download_link.auth_user }}"
      url_password: "{{ tileserver_gl.mbtile_download_link.auth_password }}"
      dest: "{{ tileserver_gl.root_dir }}/{{ tileserver_gl.mbtile }}"

  - name: Copy config.json.j2
    template:
      src: config.json.j2
      dest: "{{ tileserver_gl.root_dir }}/config.json"

  - name: Copy fonts
    synchronize:
      src: fonts/
      dest: "{{ tileserver_gl.root_dir }}/fonts/"

  - name: Copy icons
    synchronize:
      src: icons/
      dest: "{{ tileserver_gl.root_dir }}/icons/"

  - name: Copy sprites
    synchronize:
      src: sprites/
      dest: "{{ tileserver_gl.root_dir }}/sprites/"

  - name: Copy styles
    synchronize:
      src: styles/
      dest: "{{ tileserver_gl.root_dir }}/styles/"

  - name: Remove / Stop running tileserver-gl docker images
    docker_container:
      name: tileserver-gl
      state: absent

  # We run the docker directly via shell because the docker_container does not support the passing of parameters yet.
  - name: Start docker maptiler/tileserver-gl
    shell:
      cmd: "docker run -d -it --restart unless-stopped -v {{ tileserver_gl.root_dir }}:/data -p 8080:8080 --name tileserver-gl maptiler/tileserver-gl --config config.json"
      chdir: "{{ tileserver_gl.root_dir }}"


